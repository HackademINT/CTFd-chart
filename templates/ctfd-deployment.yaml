apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "ctfd.ctfd.deployment.name" . }}
  labels:
    {{- include "ctfd.labels" . | nindent 4 }}
  annotations:
    checksum/ctfd-config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
    checksum/ctfd-secret: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "ctfd.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "ctfd.selectorLabels" . | nindent 8 }}
    spec:
      {{- if .Values.podSecurityContext.enabled }}
      securityContext: {{- omit .Values.podSecurityContext "enabled" | toYaml | nindent 8 }}
      {{- end }}
      containers:
        - name: ctfd
          image: {{ .Values.image.image | quote }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- if .Values.command }}
          command: {{- include "ctfd.util.render" ( dict "value" .Values.command "context" $) | nindent 12 }}
          {{- end }}
          {{- if .Values.args }}
          args: {{- include "common.tplvalues.render" ( dict "value" .Values.args "context" $) | nindent 12 }}
          {{- end }}
          {{- if .Values.containerSecurityContext.enabled }}
          securityContext: {{- omit .Values.containerSecurityContext "enabled" | toYaml | nindent 12 }}
          {{- end }}
          env:
            - name: SECRET_KEY
              valueFrom:
                secretKeyRef:
                  key: flaskSecretKey
                  name: {{ include "ctfd.fullname" . }}
            {{- if .Values.mariadb.enabled }}
            - name: DATABASE_PROTOCOL
              value: "mysql+pymysql"
            - name: DATABASE_HOST
              value: {{ include "ctfd.maridb.serviceName" . | quote }}
            - name: DATABASE_PORT
              value: {{ .Values.mariadb.primary.service.ports.mysql | quote }}
            - name: DATABASE_NAME
              value: {{ .Values.mariadb.auth.database | quote }}
            - name: DATABASE_USER
              value: {{ .Values.mariadb.auth.username | quote }}
            - name: DATABASE_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: mariadb-password
                  name: {{ include "ctfd.maridb.databaseSecretName" . | quote }}
            {{- else if .Values.externalDatabase.enabled }}
            - name: DATABASE_PROTOCOL
              value: {{ .Values.externalDatabase.protocol | quote }}
            - name: DATABASE_HOST
              value: {{ .Values.externalDatabase.host | quote }}
            - name: DATABASE_PORT
              value: {{ .Values.externalDatabase.port | quote }}
            - name: DATABASE_NAME
              value: {{ .Values.externalDatabase.database | quote }}
            - name: DATABASE_USER
              value: {{ .Values.externalDatabase.user | quote }}
            - name: DATABASE_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: mariadb-password
                  name: {{ include "ctfd.maridb.databaseSecretName" . | quote }}
            {{- end }}
            {{- if .Values.redis.enabled }}
            - name: REDIS_HOST
              value: {{ include "ctfd.redis.serviceName" . | quote }}
            - name: REDIS_PROTOCOL
              value: "redis"
            - name: REDIS_USER
              value: ""
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: redis-password
                  name: {{ include "ctfd.redis.redisSecretName" . | quote }}
            - name: REDIS_PORT
              value: {{ .Values.redis.master.service.ports.redis | quote }}
            {{- else if .Values.externalRedis.enabled }}
            - name: REDIS_HOST
              value: {{ .Values.externalRedis.host | quote }}
            - name: REDIS_PROTOCOL
              value: {{ .Values.externalRedis.protocol | quote }}
            - name: REDIS_USER
              value: {{ .Values.externalRedis.user | quote }}
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: redis-password
                  name: {{ include "ctfd.redis.redisSecretName" . | quote }}
            - name: REDIS_PORT
              value: {{ .Values.externalRedis.port | quote }}
            - name: REDIS_DB
              value: {{ .Values.externalRedis.index | quote }}
            {{- end }}
            - name: SESSION_COOKIE_HTTPONLY
              valueFrom:
                configMapKeyRef:
                  name: {{ include "ctfd.fullname" . }}
                  key: security.sessionCookie.httpOnly
            - name: SESSION_COOKIE_SAMESITE
              valueFrom:
                configMapKeyRef:
                  name: {{ include "ctfd.fullname" . }}
                  key: security.sessionCookie.sameSite
            - name: PERMANENT_SESSION_LIFETIME
              valueFrom:
                configMapKeyRef:
                  name: {{ include "ctfd.fullname" . }}
                  key: security.permanentSessionLifetime
            {{- if or .Values.mail.smtp.enabled .Values.mail.mailgun.enabled }}
            - name: MAILFROM_ADDR
              valueFrom:
                configMapKeyRef:
                  name: {{ include "ctfd.fullname" . }}
                  key: mail.addressFrom
            {{- end }}
            {{- if .Values.mail.smtp.enabled }}
            - name: MAIL_SERVER
              valueFrom:
                configMapKeyRef:
                  name: {{ include "ctfd.fullname" . }}
                  key: smtp.server
            - name: MAIL_PORT
              valueFrom:
                configMapKeyRef:
                  name: {{ include "ctfd.fullname" . }}
                  key: smtp.port
            - name: MAIL_USEAUTH
              valueFrom:
                configMapKeyRef:
                  name: {{ include "ctfd.fullname" . }}
                  key: smtp.useAuth
            {{- if .Values.mail.smtp.useAuth }}
            - name: MAIL_USERNAME
              valueFrom:
                secretKeyRef:
                  name: {{ include "ctfd.smtp.smtpSecretName" . }}
                  key: smtpUsername
            - name: MAIL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "ctfd.smtp.smtpSecretName" . }}
                  key: smtpPassword
            {{- end }}
            - name: MAIL_TLS
              valueFrom:
                configMapKeyRef:
                  name: {{ include "ctfd.fullname" . }}
                  key: smtp.tls
            - name: MAIL_SSL
              valueFrom:
                configMapKeyRef:
                  name: {{ include "ctfd.fullname" . }}
                  key: smtp.ssl
            - name: MAILSENDER_ADDR
              valueFrom:
                configMapKeyRef:
                  name: {{ include "ctfd.fullname" . }}
                  key: smtp.addressSender
            {{- else if .Values.mail.mailgun.enabled }}
            - name: MAILGUN_API_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ include "ctfd.mailgun.mailgunSecretName" . }}
                  key: mailgunApiKey
            - name: MAILGUN_BASE_URL
              valueFrom:
                configMapKeyRef:
                  name: {{ include "ctfd.fullname" . }}
                  key: mailgun.baseUrl
            {{- end }}
            - name: LOG_FOLDER
              valueFrom:
                configMapKeyRef:
                  name: {{ include "ctfd.fullname" . }}
                  key: logFolder
            - name: REVERSE_PROXY
              valueFrom:
                configMapKeyRef:
                  name: {{ include "ctfd.fullname" . }}
                  key: optional.reverseProxy
            - name: THEME_FALLBACK
              valueFrom:
                configMapKeyRef:
                  name: {{ include "ctfd.fullname" . }}
                  key: optional.themeFallback
            - name: TEMPLATES_AUTO_RELOAD
              value: "false"
            - name: SQLALCHEMY_TRACK_MODIFICATIONS
              valueFrom:
                configMapKeyRef:
                  name: {{ include "ctfd.fullname" . }}
                  key: optional.sqlAlchemy.trackModifications
            - name: SWAGGER_UI
              valueFrom:
                configMapKeyRef:
                  name: {{ include "ctfd.fullname" . }}
                  key: optional.swaggerUi
            - name: UPDATE_CHECK
              valueFrom:
                configMapKeyRef:
                  name: {{ include "ctfd.fullname" . }}
                  key: optional.updateCheck
            - name: SERVER_SENT_EVENTS
              valueFrom:
                configMapKeyRef:
                  name: {{ include "ctfd.fullname" . }}
                  key: optional.serverSentEvents
            - name: HTML_SANITIZATION
              valueFrom:
                configMapKeyRef:
                  name: {{ include "ctfd.fullname" . }}
                  key: optional.htmlSanitization
            - name: SQLALCHEMY_MAX_OVERFLOW
              valueFrom:
                configMapKeyRef:
                  name: {{ include "ctfd.fullname" . }}
                  key: optional.sqlAlchemy.maxOverflow
            - name: SQLALCHEMY_POOL_PRE_PING
              valueFrom:
                configMapKeyRef:
                  name: {{ include "ctfd.fullname" . }}
                  key: optional.sqlAlchemy.poolPrePing
            - name: SAFE_MODE
              valueFrom:
                configMapKeyRef:
                  name: {{ include "ctfd.fullname" . }}
                  key: optional.safeMode
            {{- if .Values.oauth.enabled }}
            - name: OAUTH_CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: {{ include "ctfd.oauth.oauthSecretName" . }}
                  key: oauthClientId
            - name: OAUTH_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ include "ctfd.oauth.oauthSecretName" . }}
                  key: oauthClientSecret
            {{- end }}
            {{- if .Values.minio.enabled }}
            - name: UPLOAD_PROVIDER
              value: s3
            - name: AWS_S3_ENDPOINT_URL
              value: {{ printf "http://%s:9000" (include "ctfd.minio.serviceName" .) | quote }}
            - name: AWS_S3_BUCKET
              value: {{ include "ctfd.minio.bucketName" . | quote }}
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: {{ include "ctfd.minio.secretName" . | quote }}
                  key: root-user
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ include "ctfd.minio.secretName" . | quote }}
                  key: root-password
            {{- else if .Values.externalS3.enabled }}
            - name: UPLOAD_PROVIDER
              value: s3
            - name: AWS_S3_ENDPOINT_URL
              value: {{ .Values.externalS3.endpoint | quote }}
            - name: AWS_S3_REGION
              value: {{ .Values.externalS3.region | quote }}
            - name: AWS_S3_BUCKET
              value: {{ .Values.externalS3.bucket | quote}}
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: {{ include "ctfd.s3.s3SecretName" . }}
                  key: accessKey
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ include "ctfd.s3.s3SecretName" . }}
                  key: secretKey
            {{- end }}
            - name: GUNICORN_CMD_ARGS
              value: --timeout=0
            {{- if .Values.extraEnvVars }}
            {{- include "common.tplvalues.render" (dict "value" .Values.extraEnvVars "context" $) | nindent 12 }}
            {{- end }}
          envFrom:
            {{- if .Values.extraEnvVarsCM }}
            - configMapRef:
                name: {{ include "ctfd.util.render" (dict "value" .Values.extraEnvVarsCM "context" $) }}
            {{- end }}
            {{- if .Values.extraEnvVarsSecret }}
            - secretRef:
                name: {{ include "ctfd.util.render" (dict "value" .Values.extraEnvVarsSecret "context" $) }}
            {{- end }}
          ports:
            - name: http
              protocol: TCP
              containerPort: {{ .Values.httpPort }}
          {{- if .Values.resources }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          {{- end }}
          {{- if .Values.startupProbe.enabled }}
          startupProbe: {{- include "ctfd.util.render" ( dict "value" (omit .Values.startupProbe "enabled") "context" $) | nindent 12 }}
          {{- end }}
          {{- if .Values.readinessProbe.enabled }}
          readinessProbe: {{- include "ctfd.util.render" ( dict "value" (omit .Values.readinessProbe "enabled") "context" $) | nindent 12 }}
          {{- end }}
          {{- if .Values.livenessProbe.enabled }}
          livenessProbe: {{- include "ctfd.util.render" ( dict "value" (omit .Values.livenessProbe "enabled") "context" $) | nindent 12 }}
          {{- end }}
      {{- if .Values.image.pullSecret }}
      imagePullSecrets:
        - name: {{ .Values.image.pullSecret | quote }}
      {{- end }}